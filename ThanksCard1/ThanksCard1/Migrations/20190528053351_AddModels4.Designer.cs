// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ThanksCard1.Models;

namespace ThanksCard1.Migrations
{
    [DbContext(typeof(ThanksCardContext))]
    [Migration("20190528053351_AddModels4")]
    partial class AddModels4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ThanksCard1.Models.Busyo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BusyoName");

                    b.Property<int>("CD");

                    b.Property<bool>("Power");

                    b.HasKey("Id");

                    b.ToTable("Busyoes");
                });

            modelBuilder.Entity("ThanksCard1.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CD");

                    b.Property<int?>("KaId");

                    b.Property<string>("Mail");

                    b.Property<string>("Name");

                    b.Property<string>("NameKana");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.HasIndex("KaId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ThanksCard1.Models.Ka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BusyoId");

                    b.Property<int>("CD");

                    b.Property<string>("KaName");

                    b.HasKey("Id");

                    b.HasIndex("BusyoId");

                    b.ToTable("Kas");
                });

            modelBuilder.Entity("ThanksCard1.Models.TNKCD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<int>("CD");

                    b.Property<DateTime>("DateHelp");

                    b.Property<DateTime>("DateSend");

                    b.Property<int?>("EmployeeFromId");

                    b.Property<int?>("EmployeeToId");

                    b.Property<bool>("Look");

                    b.Property<string>("Title");

                    b.Property<int?>("WorkId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeFromId");

                    b.HasIndex("EmployeeToId");

                    b.HasIndex("WorkId");

                    b.ToTable("TNKCDs");
                });

            modelBuilder.Entity("ThanksCard1.Models.Work", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CD");

                    b.Property<int>("WorkRelation");

                    b.HasKey("Id");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("ThanksCard1.Models.Employee", b =>
                {
                    b.HasOne("ThanksCard1.Models.Ka", "Ka")
                        .WithMany()
                        .HasForeignKey("KaId");
                });

            modelBuilder.Entity("ThanksCard1.Models.Ka", b =>
                {
                    b.HasOne("ThanksCard1.Models.Busyo", "Busyo")
                        .WithMany()
                        .HasForeignKey("BusyoId");
                });

            modelBuilder.Entity("ThanksCard1.Models.TNKCD", b =>
                {
                    b.HasOne("ThanksCard1.Models.Employee", "EmployeeFrom")
                        .WithMany()
                        .HasForeignKey("EmployeeFromId");

                    b.HasOne("ThanksCard1.Models.Employee", "EmployeeTo")
                        .WithMany()
                        .HasForeignKey("EmployeeToId");

                    b.HasOne("ThanksCard1.Models.Work", "Work")
                        .WithMany()
                        .HasForeignKey("WorkId");
                });
#pragma warning restore 612, 618
        }
    }
}
